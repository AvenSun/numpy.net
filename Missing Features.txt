missing/untested features:
	1) real and imaginary numbers
	2) ndarray support for strings  (I didn't need them and likely very different implementation in .NET)
	3) ndarray support for objects  (I didn't need them and likely very different implementation in .NET)
	
Added feature:
	1) .NET decimal and char as supported data types. Decimal support 
	could be shaky as it is very different than the other data types.


UFUNCS - don't work perfectly correctly, largely because we are not 
initializing the data structure coming out of get_op_loc correctly.
Need to figure out what to set for UFuncOps.nin and UFuncOps.nargs.  
This controls when a operation upscales to a different size.  
This needs research.

Ufunc operations seem to work correctly for flat arrays. They currently 
do not work correctly if for example trying to subtract a 
1x2 array from a 2x2 array.
NpyArray_PerformNumericOpArray_NpyArray_GenericBinaryFunction 
contains code that I think will work if it is initialized properly

np.where function.  Need to implement the x and y parameters as this is a called function for several other functions.


What's next?

I am not a numpy expert.  In fact, I never even heard of Numpy before 
I got involved in this project.  I believe what I have is a great start 
for running Numpy applications on .NET.  I used it to successfully port 
an existing and complex Numpy application but I am sure there is more work to do.


What I am hoping is that the Numpy experts in the world can take a look 
at this repository and
1) help determine what features must be added, 
2) help debug/implement some of the missing features
3) I hope this becomes the basis of a fully featured Numpy tool that 
the industry can depend on.

After it is more fully filled out and tested, it would be great if s
someone ported it to Java.  I believe this is also strong interest in a 
native Java/Numpy solution.